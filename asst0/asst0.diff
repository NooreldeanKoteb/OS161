diff --git a/kern/arch/mips/mips/dumbvm.c b/kern/arch/mips/mips/dumbvm.c
index 10638bf..865f527 100644
--- a/kern/arch/mips/mips/dumbvm.c
+++ b/kern/arch/mips/mips/dumbvm.c
@@ -43,11 +43,13 @@ getppages(unsigned long npages)
 vaddr_t 
 alloc_kpages(int npages)
 {
+	DEBUG(DB_VM, "dumbvm: alloc_kpages - npages: %d\n", npages);	
+
 	paddr_t pa;
 	pa = getppages(npages);
 	if (pa==0) {
 		return 0;
-	}
+	} 
 	return PADDR_TO_KVADDR(pa);
 }
 
@@ -74,6 +76,7 @@ vm_fault(int faulttype, vaddr_t faultaddress)
 	faultaddress &= PAGE_FRAME;
 
 	DEBUG(DB_VM, "dumbvm: fault: 0x%x\n", faultaddress);
+	DEBUG(DB_VM, "dumbvm: fault: - Type: %d\n" faulttype);
 
 	switch (faulttype) {
 	    case VM_FAULT_READONLY:
@@ -198,6 +201,10 @@ int
 as_define_region(struct addrspace *as, vaddr_t vaddr, size_t sz,
 		 int readable, int writeable, int executable)
 {
+	DEBUG(DB_VM, "dumbvm: as_define_region - Readable: %d\n", readable);
+	DEBUG(DB_VM, "dumbvm: as_define_region - Writeable: %d\n", writeable);
+	DEBUG(DB_VM, "dumbvm: as_define_region - Executable: %d\n", executable);
+
 	size_t npages; 
 
 	/* Align the region. First, the base... */
diff --git a/kern/arch/mips/mips/trap.c b/kern/arch/mips/mips/trap.c
index 30fca6f..dfbe65c 100644
--- a/kern/arch/mips/mips/trap.c
+++ b/kern/arch/mips/mips/trap.c
@@ -279,6 +279,11 @@ mips_usermode(struct trapframe *tf)
 void
 md_usermode(int argc, userptr_t argv, vaddr_t stack, vaddr_t entry)
 {
+	DEBUG(DB_SYSCALL, "syscall: md_usermode - argc: %d\n", argc);
+	DEBUG(DB_SYSCALL, "syscall: md_usermode - stack: %lu\n",
+		(unsigned long) stack);
+	DEBUG(DB_SYSCALL, "syscall: md_usermode - entry: %lu\n",
+		(unsigned long) entry);
 	struct trapframe tf;
 
 	bzero(&tf, sizeof(tf));
diff --git a/kern/userprog/loadelf.c b/kern/userprog/loadelf.c
index 9651c88..128875f 100644
--- a/kern/userprog/loadelf.c
+++ b/kern/userprog/loadelf.c
@@ -47,6 +47,10 @@ load_segment(struct vnode *v, off_t offset, vaddr_t vaddr,
 		filesize = memsize;
 	}
 
+	DEBUG(DB_EXEC, "ELF: Loading memesize: %lu\n", 
+		(unsigned long) memsize );
+	DEBUG(DB_EXEC, "ELF: Loading is_Executable: %d\n", is_executable);
+
 	DEBUG(DB_EXEC, "ELF: Loading %lu bytes to 0x%lx\n", 
 	      (unsigned long) filesize, (unsigned long) vaddr);
 
